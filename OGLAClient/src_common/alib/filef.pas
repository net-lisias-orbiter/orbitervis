{
 Copyright (C) 2003-2007 by Artyom Litvinovich
 AlgorLib: File Functions, no VFS
}
//{$DEFINE encodedfop}
unit filef;
interface
uses sysutils,asys;
                
//{$H-}

function  filelist(fils:string;fattr:longint):astr; 
procedure wipedir(path:string);            
procedure vfcopyfile(inp,outp:string);

function  readstr(var tinf:file):string;
function  readbool(var tinf:file):boolean;
function  readint(var tinf:file):longint;
function  readext(var tinf:file):real;
procedure writestr(var touf:file;st:string);
procedure writebool(var touf:file;bl:boolean);
procedure writeint(var touf:file;inn:longint);
procedure writeext(var touf:file;inn:real);

implementation

function filelist(fils:string;fattr:longint):astr;
var srch:TSearchRec;
mc,rp:integer;
begin
 setlength(result,0);
 mc:=0;rp:=0;

 if findfirst(fils,fattr,srch)<>0 then begin findclose(srch);exit;end;
 repeat
  if((fattr and srch.Attr)<>0)and(srch.name<>'.')and(srch.name<>'..') then begin
   if mc>=rp then begin rp:=rp*2+1; setlength(result,rp);end;
   result[mc]:=srch.name;
   mc:=mc+1;
  end;       
  if findnext(srch)<>0 then begin findclose(srch);setlength(result,mc);exit;end;
 until false;
end;
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

procedure wipedir(path:string);
var
ar:longint;
srch:TSearchRec;
cfile:string;
nf:boolean;
begin
 nf:=true;
 ar:=findfirst(path+CH_SLASH+'*.*',$0000003F,srch);
 if ar<>0 then begin
  findclose(srch);
  exit;
 end;
 cfile:=srch.name;
 repeat
  if not nf then begin
   ar:=findnext(srch);
   if ar<>0 then begin
    findclose(srch);
    break;
   end;
   cfile:=srch.name;
  end else nf:=false;
  deletefile(path+CH_SLASH+cfile);
 until false;
end;
 
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

procedure vfcopyfile(inp,outp:string);
var ih:longint;
fi:file;
bu:pointer;
begin
 halt;
 assignfile(fi,inp);
 reset(fi,1);
 ih:=FileCreate(outp);
 getmem(bu,filesize(fi));
 blockread(fi,bu^,filesize(fi));
 FileWrite(ih,bu^,filesize(fi));
 freemem(bu);
 FileClose(ih);
 closefile(fi);
end;


////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

{$IFDEF encodedfop}

function hbtl(b:byte):byte;
begin
case b of
 0:result:=ord('*');
 1:result:=ord('+');
 2:result:=ord('_');
 3:result:=ord('-');
 4:result:=ord('=');
 5:result:=ord(':');
 6:result:=ord(';');
 7:result:=ord('.');
 8:result:=ord(',');
 9:result:=ord('/');
10:result:=ord('\');
11:result:=ord('[');
12:result:=ord(']');
13:result:=ord('(');
14:result:=ord(')');
15:result:=ord('|');
end;
end;

function hltb(b:byte):byte;
begin
case b of
 ord('*'):result:=0;
 ord('+'):result:=1;
 ord('_'):result:=2;
 ord('-'):result:=3;
 ord('='):result:=4;
 ord(':'):result:=5;
 ord(';'):result:=6;
 ord('.'):result:=7;
 ord(','):result:=8;
 ord('/'):result:=9;
 ord('\'):result:=10;
 ord('['):result:=11;
 ord(']'):result:=12;
 ord('('):result:=13;
 ord(')'):result:=14;
 ord('|'):result:=15;
end;
end;

function encbyte(b:byte):word;
var l,h:byte;
begin
 l:=b-((b shr 4) shl 4);
 h:=b shr 4;
 result:=hbtl(l)+hbtl(h) shl 8;
end;
function decbyte(b:word):byte;
//var a,c:byte;
begin
// a:=hltb((b shl 8)shr 8);
// c:=hltb(b shr 8);
 result:=byte(hltb((b shl 8) shr 8)+hltb(b shr 8) shl 4);
end;


function readstr(var tinf:file):string;
var sr:string;
w:word;
b:byte;
i:integer;
begin
sr:='';
blockread(tinf,w,2);
b:=decbyte(w);
for i:=0 to b-1 do begin
 blockread(tinf,w,2);
 sr:=sr+chr(decbyte(w));
end;
readstr:=sr;
end;

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function readbool(var tinf:file):boolean;
var b:word;
begin
blockread(tinf,b,2);
if decbyte(b)=1 then readbool:=true else readbool:=false;
end;

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function readint(var tinf:file):longint;
var r:longint;
w:word;
begin
blockread(tinf,w,2);
r:=decbyte(w);
blockread(tinf,w,2);
r:=r+decbyte(w) shl 8;
blockread(tinf,w,2);
r:=r+decbyte(w) shl 16;
blockread(tinf,w,2);
r:=r+decbyte(w) shl 24;
readint:=r;
end;

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function readext(var tinf:file):real;
var a:array[0..1]of longint;
c:^real;
begin
 a[0]:=readint(tinf);
 a[1]:=readint(tinf);
 c:=@a;
 result:=c^;
end;

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

procedure writestr(var touf:file;st:string);
var
i:integer;
d:word;
begin
d:=encbyte(length(st));
blockwrite(touf,d,2);
for i:=1 to length(st) do begin d:=encbyte(byte(st[i])); blockwrite(touf,d,2); end;
end;

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

procedure writebool(var touf:file;bl:boolean);
var b:word;
begin
if bl then b:=encbyte(1) else b:=encbyte(0);
blockwrite(touf,b,2);
end;

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

procedure writeint(var touf:file;inn:longint);
var a,b,c,d:word;
begin
 a:=encbyte((inn shl 24)shr 24);
 b:=encbyte((inn shl 16)shr 24);
 c:=encbyte((inn shl 08)shr 24);
 d:=encbyte((inn shl 00)shr 24);
 blockwrite(touf,a,2);
 blockwrite(touf,b,2);
 blockwrite(touf,c,2);
 blockwrite(touf,d,2);
end;

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

procedure writeext(var touf:file;inn:real);
var a,b:longint;
c:plongint;
begin b:=0;
 c:=@inn;
 a:=c^;
 a:=plongint(dword(c)+4)^;
 writeint(touf,a);
 writeint(touf,b);
end;

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
{$ELSE}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function readstr(var tinf:file):string;
var sr:string;
b:byte;
begin
blockread(tinf,b,1);
seek(tinf,filepos(tinf)-1);
blockread(tinf,sr,b+1);
readstr:=sr;
end;

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function readbool(var tinf:file):boolean;
var b:byte;
begin
blockread(tinf,b,1);
if b=1 then readbool:=true else readbool:=false;
end;

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function readint(var tinf:file):longint;
var b:longint;
begin
blockread(tinf,b,4);
readint:=b;
end;

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

function readext(var tinf:file):real;
var b:real;
begin
blockread(tinf,b,8);
readext:=b;
end;

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

procedure writestr(var touf:file;st:string);
var sr:string;
begin
sr:=st;
blockwrite(touf,sr,length(sr)+1);
end;

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

procedure writebool(var touf:file;bl:boolean);
var b:byte;
begin
if bl then b:=1 else b:=0;
blockwrite(touf,b,1);
end;

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

procedure writeint(var touf:file;inn:longint);
begin
blockwrite(touf,inn,4);
end;

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

procedure writeext(var touf:file;inn:real);
begin
blockwrite(touf,inn,8);
end;

{$ENDIF}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

begin
end.

